(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{580:function(e,t,a){"use strict";a.r(t);var n=a(13),o=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"command-line-tools"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command-line-tools"}},[e._v("#")]),e._v(" Command-line tools")]),e._v(" "),a("h2",{attrs:{id:"kdk-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kdk-cli"}},[e._v("#")]),e._v(" KDK CLI")]),e._v(" "),a("p",[e._v("The KDK CLI (a.k.a. "),a("code",[e._v("kli")]),e._v(") is a multiplexer for usual git/npm/yarn commands used when developing KDK-based applications. It allows to easily clone, install, link, unlink, switch branch on all modules and application using a single command.")]),e._v(" "),a("h3",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),a("p",[e._v("Production version:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -g @kalisio/kli\n")])])]),a("p",[e._v("Or to use the master branch locally:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/kalisio/kli.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" kli\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("link")]),e._v("\n")])])]),a("h3",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[e._v("#")]),e._v(" Usage")]),e._v(" "),a("p",[e._v("The CLI relies on a workspace file defining the dependency tree between your KDK-based application and modules like this:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  // Each key is the repo name of a module or application\n  kdk: {\n    dependencies: [], // List of dependent KDK modules if any\n    branches: ['master', 'test'] // List of branches the module is available on\n    // If the current target branch of the CLI is not included it will be skipped\n  },\n  kApp: {\n    application: true, // Indicates if this is the main application module\n    dependencies: ['@kalisio/kdk'],\n    branch: 'master' // Branch the module should be forced on whatever the current target branch of the CLI\n  }\n}\n\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("branch")]),e._v(" option can also target a git tag, typically fo production releases.")])]),e._v(" "),a("p",[e._v("All operations will take effect in the current working directory so that subdirectories named according to modules will be created or expected to already exist.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// Will clone all repositories\nkli workspace.js --clone\n// Will install dependencies in all modules and application\nkli workspace.js --install\n// Will perform link between required modules and application\nkli workspace.js --link\n// Will perform unlink between required modules and application\nkli workspace.js --unlink\n// Will perform branch switching on all modules and application\nkli workspace.js --branch test\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("This CLI assumes git and yarn are already globally installed on your system.")])]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("By default all Git operations target the "),a("code",[e._v("kalisio")]),e._v(" organization, you can change this for the whole workspace using the "),a("code",[e._v("organization")]),e._v(" CLI option or on specific modules only using the "),a("code",[e._v("organization")]),e._v(" option in the workspace file. Like this you include modules coming from a separate organization but used as dependencies of the project owned by the main organization of the project.")])]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("All operations are performed relative to the CWD by default, you can change this for specific modules only using the "),a("code",[e._v("path")]),e._v(" option in the workspace file providing a module path relative to the CWD. Like this you can for instance have modules coming from a separate organization isolated into their own directory.")])]),e._v(" "),a("p",[e._v("Sample workspaces for our "),a("a",{attrs:{href:"https://github.com/kalisio/kApp",target:"_blank",rel:"noopener noreferrer"}},[e._v("application template"),a("OutboundLink")],1),e._v(" and "),a("a",{attrs:{href:"https://github.com/kalisio/kano",target:"_blank",rel:"noopener noreferrer"}},[e._v("Kano"),a("OutboundLink")],1),e._v(" are provided in the "),a("a",{attrs:{href:"https://github.com/kalisio/kli",target:"_blank",rel:"noopener noreferrer"}},[e._v("kli repository"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("Full CLI usage is the following:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('Usage: index <workspacefile> [options]\n\nOptions:\n  -V, --version                      output the version number\n  -o, --organization [organization]  GitHub organization owing the project (default: "kalisio")\n  -d, --debug                        Verbose output for debugging\n  -c, --clone [branch]               Clone git repositories (with optional target branch)\n  -p, --pull                         Pull git repositories\n  -i, --install                      Perform yarn install\n  -l, --link                         Perform yarn link\n  -ul, --unlink                      Perform yarn unlink\n  -b, --branch <branch>              Switch git branch\n  -m, --modules <modules>            Comma separated list of modules from the workspace to apply command on\n  -h, --help                         output usage information\n')])])]),a("h2",{attrs:{id:"gitrob"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitrob"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://github.com/michenriksen/gitrob",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gitrob"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("Gitrob is a tool to help find potentially sensitive files pushed to public repositories on Github. Simply run it using a GitHub token and a target user or organisation: "),a("code",[e._v("gitrob -github-access-token XXX kalisio")]),e._v(".")]),e._v(" "),a("p",[e._v("Then you can open the WebUI at "),a("a",{attrs:{href:"http://localhost:9393",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://localhost:9393"),a("OutboundLink")],1),e._v(" and see what's going on.")]),e._v(" "),a("h2",{attrs:{id:"nohup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nohup"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Nohup",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nohup"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("We use it to launch processes in the background on servers, which won't be killed when closing the ssh session.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://doc.ubuntu-fr.org/screen",target:"_blank",rel:"noopener noreferrer"}},[e._v("Screen"),a("OutboundLink")],1),e._v(" can also do the job")]),e._v(" "),a("h2",{attrs:{id:"tail"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tail"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.linode.com/docs/tools-reference/tools/view-and-follow-the-end-of-text-files-with-tail",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tail"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("To track logs currently written, Docker has an "),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/logs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("equivalent command"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"conemu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conemu"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://github.com/Maximus5/ConEmu",target:"_blank",rel:"noopener noreferrer"}},[e._v("ConEmu"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("Customizable Windows terminal.")]),e._v(" "),a("p",[e._v("To add new tasks "),a("em",[e._v("right click on settings > Startup/Tasks")]),e._v(", and add commands like this to open a new PowerShell at a given location:\n"),a("code",[e._v('powershell.exe -new_console:t:"TaskName":d:D:\\path-to-directory')]),e._v(".")]),e._v(" "),a("p",[e._v("If you'd like the PowerShell to execute a script at launch time (e.g. to setup your environment variables): "),a("code",[e._v('powershell.exe -noexit path-to-script new_console:t:"TaskName":d:D:\\path-to-directory')])]),e._v(" "),a("p",[e._v("To make a command executed by default "),a("em",[e._v("right click on settings > Startup > Select it as named task")]),e._v(".")]),e._v(" "),a("blockquote",[a("p",[e._v("It might be required to modify the "),a("a",{attrs:{href:"https://technet.microsoft.com/fr-FR/library/hh847748.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("execution policy"),a("OutboundLink")],1),e._v(", e.g. "),a("code",[e._v("Set-ExecutionPolicy -ExecutionPolicy RemoteSigned")]),e._v(".")])]),e._v(" "),a("h2",{attrs:{id:"travis-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#travis-cli"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://github.com/travis-ci/travis.rb#installation",target:"_blank",rel:"noopener noreferrer"}},[e._v("Travis CLI"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("To encrypt a file in reliable manner use a Linux VM or container because this does not work under Windows. For example with https://hub.docker.com/r/caktux/travis-cli/:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('docker pull caktux/travis-cli\n// Mount your project as volume\n// Override the default entry point which automatically launch the travis CLI with provided arguments\n// otherwise you cannot do multiple commands\ndocker run -it --name travis -v d:/Development/kalisio/kaabah:/project --entrypoint="" --rm caktux/travis-cli sh\n$ travis login\n$ travis encrypt-file ssh.pem\n')])])]),a("p",[e._v("Add the output to your build script:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("before_install:\n  - openssl aes-256-cbc -K $encrypted_12c8071d2874_key -iv $encrypted_12c8071d2874_iv -in ssh.pem.enc -out ssh.pem -d\n")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);